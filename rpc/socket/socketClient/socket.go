// Code generated by goctl. DO NOT EDIT.
// Source: socket.proto

package socketClient

import (
	"context"

	"store/rpc/socket/pb/socket"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ReqBroadcast = socket.ReqBroadcast
	ResSuccess   = socket.ResSuccess

	Socket interface {
		Broadcast(ctx context.Context, in *ReqBroadcast, opts ...grpc.CallOption) (*ResSuccess, error)
	}

	defaultSocket struct {
		cli zrpc.Client
	}
)

func NewSocket(cli zrpc.Client) Socket {
	return &defaultSocket{
		cli: cli,
	}
}

func (m *defaultSocket) Broadcast(ctx context.Context, in *ReqBroadcast, opts ...grpc.CallOption) (*ResSuccess, error) {
	client := socket.NewSocketClient(m.cli.Conn())
	return client.Broadcast(ctx, in, opts...)
}
